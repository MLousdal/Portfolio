---
export interface Props {
  classes?: string;
}
const { classes } = Astro.props;
---

<div class:list={["relative", classes]}>
  <canvas
    id="gradient-canvas"
    data-transition-in
    class="w-full h-full aspect-square transition border-2 rounded-md shadow-xl cursor-pointer hover:shadow"
    style="--gradient-color-1: #2563eb;--gradient-color-2: #3b82f6;--gradient-color-3: #dc2626;--gradient-color-4: #ef4444;"
  ></canvas>
  <img
    src="/icons/star.svg" alt=""
    class="absolute bottom-0 right-0 w-24 origin-bottom-right translate-x-1/2 translate-y-1/2 sm:w-36 md:landscape:w-24 lg:w-24 xl:w-40 xl:landscape:w-40 aspect-square motion-safe:animate-spin-slow"
  />
</div>

<script>
  import { Gradient } from "../assets/gradient.js";

  const gradient = new Gradient();
  gradient.initGradient("#gradient-canvas");

  function generateRandomColor() {
    return (
      "#" +
      Math.floor(Math.random() * 0xffffff)
        .toString(16)
        .padStart(6, "0")
    );
  }

  function generateRandomColorCodes(count: number) {
    return Array.from({ length: count }, generateRandomColor);
  }

  const gradientElm = document.querySelector("#gradient-canvas");
  gradientElm?.addEventListener("click", () => {
    const randomColorCodes = generateRandomColorCodes(4);
    let styleString = "";
    randomColorCodes.flat(Infinity).forEach((c, i) => {
      styleString += `--gradient-color-${i + 1}: ${c};`;
    });
    gradientElm.setAttribute("style", styleString);
    gradient.initGradient("#gradient-canvas");
  });
</script>
